let initBodyCaller;const groupBy=(t,o)=>{const e={};return t.forEach((t=>{const s=o(t);e[s]=e[s]||[],e[s].push(t)})),e};$.extend($.fn.bootstrapTable.defaults.icons,{collapseGroup:{bootstrap3:"glyphicon-chevron-up",materialize:"arrow_drop_down"}[$.fn.bootstrapTable.theme]||"fa-angle-up",expandGroup:{bootstrap3:"glyphicon-chevron-down",materialize:"arrow_drop_up"}[$.fn.bootstrapTable.theme]||"fa-angle-down"}),$.extend($.fn.bootstrapTable.defaults,{groupBy:!1,groupByField:"",groupByFormatter:void 0,groupByToggle:!1,groupByShowToggleIcon:!1,groupByCollapsedGroups:[]});const Utils=$.fn.bootstrapTable.utils,BootstrapTable=$.fn.bootstrapTable.Constructor,_initSort=BootstrapTable.prototype.initSort,_initBody=BootstrapTable.prototype.initBody,_updateSelected=BootstrapTable.prototype.updateSelected;BootstrapTable.prototype.initSort=function(...t){_initSort.apply(this,Array.prototype.slice.apply(t));const o=this;if(this.tableGroups=[],this.options.groupBy&&""!==this.options.groupByField){this.options.sortName!==this.options.groupByField&&(this.options.customSort?Utils.calculateObjectValue(this.options,this.options.customSort,[this.options.sortName,this.options.sortOrder,this.data]):this.options.data.sort(((t,o)=>{const e=this.getGroupByFields(),s=[],i=[];return $.each(e,((e,p)=>{s.push(t[p]),i.push(o[p])})),t=s.join(),o=i.join(),t.localeCompare(o,void 0,{numeric:!0})})));const t=groupBy(o.data,(t=>{const o=this.getGroupByFields(),e=[];return $.each(o,((o,s)=>{e.push(t[s])})),e.join(", ")}));let e=0;$.each(t,((t,o)=>{this.tableGroups.push({id:e,name:t,data:o}),o.forEach((s=>{s._data||(s._data={}),this.isCollapsed(t,o)&&(s._class="hidden"),s._data["parent-index"]=e})),e++}))}},BootstrapTable.prototype.initBody=function(...t){if(initBodyCaller=!0,_initBody.apply(this,Array.prototype.slice.apply(t)),this.options.groupBy&&""!==this.options.groupByField){const t=this;let o=!1,e=0;this.columns.forEach((t=>{t.checkbox?o=!0:t.visible&&(e+=1)})),this.options.detailView&&!this.options.cardView&&(e+=1),this.tableGroups.forEach((s=>{const i=[];i.push(Utils.sprintf('<tr class="info groupBy %s" data-group-index="%s">',this.options.groupByToggle?"expanded":"",s.id)),t.options.detailView&&!t.options.cardView&&i.push('<td class="detail"></td>'),o&&i.push('<td class="bs-checkbox">','<input name="btSelectGroup" type="checkbox" />',"</td>");let p=s.name;void 0!==t.options.groupByFormatter&&(p=Utils.calculateObjectValue(t.options,t.options.groupByFormatter,[s.name,s.id,s.data])),i.push("<td",Utils.sprintf(' colspan="%s"',e),">",p);let r=this.options.icons.collapseGroup;this.isCollapsed(s.name,s.data)&&(r=this.options.icons.expandGroup),this.options.groupByToggle&&this.options.groupByShowToggleIcon&&i.push(`<span class="float-right ${this.options.iconsPrefix} ${r}"></span>`),i.push("</td></tr>"),t.$body.find(`tr[data-parent-index=${s.id}]:first`).before($(i.join("")))})),this.$selectGroup=[],this.$body.find('[name="btSelectGroup"]').each((function(){const o=$(this);t.$selectGroup.push({group:o,item:t.$selectItem.filter((function(){return $(this).closest("tr").data("parent-index")===o.closest("tr").data("group-index")}))})})),this.options.groupByToggle&&this.$container.off("click",".groupBy").on("click",".groupBy",(function(){const o=$(this),e=o.closest("tr").data("group-index"),s=t.$body.find(`tr[data-parent-index=${e}]`);o.toggleClass("expanded collapsed"),o.find("span").toggleClass(`${t.options.icons.collapseGroup} ${t.options.icons.expandGroup}`),s.toggleClass("hidden"),s.each(((o,e)=>t.collapseRow($(e).data("index"))))})),this.$container.off("click",'[name="btSelectGroup"]').on("click",'[name="btSelectGroup"]',(function(o){o.stopImmediatePropagation();const e=$(this).prop("checked");t[e?"checkGroup":"uncheckGroup"]($(this).closest("tr").data("group-index"))}))}initBodyCaller=!1,this.updateSelected()},BootstrapTable.prototype.updateSelected=function(...t){initBodyCaller||(_updateSelected.apply(this,Array.prototype.slice.apply(t)),this.options.groupBy&&""!==this.options.groupByField&&this.$selectGroup.forEach((t=>{const o=t.item.filter(":enabled").length===t.item.filter(":enabled").filter(":checked").length;t.group.prop("checked",o)})))},BootstrapTable.prototype.checkGroup=function(t){this.checkGroup_(t,!0)},BootstrapTable.prototype.uncheckGroup=function(t){this.checkGroup_(t,!1)},BootstrapTable.prototype.isCollapsed=function(t,o){if(this.options.groupByCollapsedGroups){const e=Utils.calculateObjectValue(this,this.options.groupByCollapsedGroups,[t,o],!0);if($.inArray(t,e)>-1)return!0}return!1},BootstrapTable.prototype.checkGroup_=function(t,o){const e=this.getSelections();this.$selectItem.filter((function(){return $(this).closest("tr").data("parent-index")===t})).prop("checked",o),this.updateRows(),this.updateSelected();const s=this.getSelections();o?this.trigger("check-all",s,e):this.trigger("uncheck-all",s,e)},BootstrapTable.prototype.getGroupByFields=function(){let t=this.options.groupByField;return $.isArray(this.options.groupByField)||(t=[this.options.groupByField]),t},$.BootstrapTable=class extends $.BootstrapTable{scrollTo(t){if(this.options.groupBy){let o={unit:"px",value:0};if("object"==typeof t&&(o=Object.assign(o,t)),"rows"===o.unit){let t=0;this.$body.find(`> tr:not(.groupBy):lt(${o.value})`).each(((o,e)=>{t+=$(e).outerHeight(!0)}));return this.$body.find(`> tr:not(.groupBy):eq(${o.value})`).prevAll(".groupBy").each(((o,e)=>{t+=$(e).outerHeight(!0)})),void this.$tableBody.scrollTop(t)}}super.scrollTo(t)}};