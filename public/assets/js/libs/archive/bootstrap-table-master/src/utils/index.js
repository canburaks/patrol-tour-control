export default{getSearchInput:t=>"string"==typeof t.options.searchSelector?$(t.options.searchSelector):t.$toolbar.find(".search input"),sprintf(t,...e){let r=!0,o=0;const s=t.replace(/%s/g,(()=>{const t=e[o++];return void 0===t?(r=!1,""):t}));return r?s:""},isObject:t=>t instanceof Object&&!Array.isArray(t),isEmptyObject:(t={})=>0===Object.entries(t).length&&t.constructor===Object,isNumeric:t=>!isNaN(parseFloat(t))&&isFinite(t),getFieldTitle(t,e){for(const r of t)if(r.field===e)return r.title;return""},setFieldIndex(t){let e=0;const r=[];for(const r of t[0])e+=r.colspan||1;for(let o=0;o<t.length;o++){r[o]=[];for(let t=0;t<e;t++)r[o][t]=!1}for(let e=0;e<t.length;e++)for(const o of t[e]){const t=o.rowspan||1,s=o.colspan||1,n=r[e].indexOf(!1);o.colspanIndex=n,1===s?(o.fieldIndex=n,void 0===o.field&&(o.field=n)):o.colspanGroup=o.colspan;for(let o=0;o<t;o++)for(let t=0;t<s;t++)r[e+o][n+t]=!0}},normalizeAccent:t=>"string"!=typeof t?t:t.normalize("NFD").replace(/[\u0300-\u036f]/g,""),updateFieldGroup(t){const e=[].concat(...t);for(const r of t)for(const t of r)if(t.colspanGroup>1){let r=0;for(let o=t.colspanIndex;o<t.colspanIndex+t.colspanGroup;o++){e.find((t=>t.fieldIndex===o)).visible&&r++}t.colspan=r,t.visible=r>0}},getScrollBarWidth(){if(void 0===this.cachedWidth){const t=$("<div/>").addClass("fixed-table-scroll-inner"),e=$("<div/>").addClass("fixed-table-scroll-outer");e.append(t),$("body").append(e);const r=t[0].offsetWidth;e.css("overflow","scroll");let o=t[0].offsetWidth;r===o&&(o=e[0].clientWidth),e.remove(),this.cachedWidth=r-o}return this.cachedWidth},calculateObjectValue(t,e,r,o){let s=e;if("string"==typeof e){const t=e.split(".");if(t.length>1){s=window;for(const e of t)s=s[e]}else s=window[e]}return null!==s&&"object"==typeof s?s:"function"==typeof s?s.apply(t,r||[]):!s&&"string"==typeof e&&this.sprintf(e,...r)?this.sprintf(e,...r):o},compareObjects(t,e,r){const o=Object.keys(t),s=Object.keys(e);if(r&&o.length!==s.length)return!1;for(const r of o)if(s.includes(r)&&t[r]!==e[r])return!1;return!0},escapeHTML:t=>"string"==typeof t?t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;").replace(/`/g,"&#x60;"):t,unescapeHTML:t=>"string"==typeof t?t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#039;/g,"'").replace(/&#x60;/g,"`"):t,getRealDataAttr(t){for(const[e,r]of Object.entries(t)){const o=e.split(/(?=[A-Z])/).join("-").toLowerCase();o!==e&&(t[o]=r,delete t[e])}return t},getItemField(t,e,r){let o=t;if("string"!=typeof e||t.hasOwnProperty(e))return r?this.escapeHTML(t[e]):t[e];const s=e.split(".");for(const t of s)o=o&&o[t];return r?this.escapeHTML(o):o},isIEBrowser:()=>navigator.userAgent.includes("MSIE ")||/Trident.*rv:11\./.test(navigator.userAgent),findIndex(t,e){for(const r of t)if(JSON.stringify(r)===JSON.stringify(e))return t.indexOf(r);return-1},trToData(t,e){const r=[],o=[];return e.each(((e,s)=>{const n=$(s),i={};i._id=n.attr("id"),i._class=n.attr("class"),i._data=this.getRealDataAttr(n.data()),i._style=n.attr("style"),n.find(">td,>th").each(((r,s)=>{const n=$(s),a=+n.attr("colspan")||1,l=+n.attr("rowspan")||1;let c=r;for(;o[e]&&o[e][c];c++);for(let t=c;t<c+a;t++)for(let r=e;r<e+l;r++)o[r]||(o[r]=[]),o[r][t]=!0;const f=t[c].field;i[f]=n.html().trim(),i[`_${f}_id`]=n.attr("id"),i[`_${f}_class`]=n.attr("class"),i[`_${f}_rowspan`]=n.attr("rowspan"),i[`_${f}_colspan`]=n.attr("colspan"),i[`_${f}_title`]=n.attr("title"),i[`_${f}_data`]=this.getRealDataAttr(n.data()),i[`_${f}_style`]=n.attr("style")})),r.push(i)})),r},sort(t,e,r,o,s,n){return null==t&&(t=""),null==e&&(e=""),o&&t===e&&(t=s,e=n),this.isNumeric(t)&&this.isNumeric(e)?(t=parseFloat(t))<(e=parseFloat(e))?-1*r:t>e?r:0:t===e?0:("string"!=typeof t&&(t=t.toString()),-1===t.localeCompare(e)?-1*r:r)},getEventName:(t,e="")=>`${t}-${e=e||`${+new Date}${~~(1e6*Math.random())}`}`,hasDetailViewIcon:t=>t.detailView&&t.detailViewIcon&&!t.cardView,getDetailViewIndexOffset(t){return this.hasDetailViewIcon(t)&&"right"!==t.detailViewAlign?1:0},checkAutoMergeCells(t){for(const e of t)for(const t of Object.keys(e))if(t.startsWith("_")&&(t.endsWith("_rowspan")||t.endsWith("_colspan")))return!0;return!1},deepCopy:t=>void 0===t?t:$.extend(!0,Array.isArray(t)?[]:{},t)};